# Cron definition to start jobs
scheduler.job=${SCHEDULER_CRON_EXECUTE:0 */10 * * * ?}

# set scheduler pool size
spring.task.scheduling.pool.size=${SCHEDULER_POOL_SIZE:1}

connector.endpoint=${FORECAST_ENDPOINT:https://web01.sta.bz.it/parking-forecast/result.json}
origin=STA
stationtype.parkingStation=ParkingStation
stationtype.parkingSensor=ParkingSensor


##### Open Data Hub Configuration
# Data provenance (Where does our data come from?)
provenance.name=${ODH_CLIENT_PROVENANCE_NAME:odh-mobility-dc-meteorology-bz-forecast}
provenance.version=${ODH_CLIENT_PROVENANCE_VERSION:0.0.0-local-dev}
provenance.origin=${ODH_CLIENT_PROVENANCE_ORIGIN:province-bolzano}


# dc-interface configuration (Writer API endpoint)
bdp_host=localhost
bdp_port=8999
bdp_endpoint=localhost

# Keycloak configuration (default = setup for local development)
authorizationUri=${OAUTH_AUTH_URI:https://auth.opendatahub.testingmachine.eu/auth}
tokenUri=${OAUTH_TOKEN_URI:https://auth.opendatahub.testingmachine.eu/auth/realms/noi/protocol/openid-connect/token}
BASE_URI=${OAUTH_BASE_URI:http://localhost:8999/json}
clientId=${OAUTH_CLIENT_ID:odh-mobility-datacollector-development}
clientName=${OAUTH_CLIENT_NAME:odh-mobility-datacollector-development}
clientSecret=${OAUTH_CLIENT_SECRET:7bd46f8f-c296-416d-a13d-dc81e68d0830}
scope=openid

# sets web type to none, since we don't need a web server
# fixes cicrcular dependency issue
spring.main.web-application-type=NONE

# logging.level.com.opendatahub.bdp.commons.dc.meteorology.bz.forecast=trace